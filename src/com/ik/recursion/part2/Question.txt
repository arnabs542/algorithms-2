	
Q1	Tower of Hanoi	Coding	not answered	Solve Question
Q2	Diameter of a tree	Coding	not answered	Solve Question
Q3	Double power	Approximate Solution	not answered	Solve Question
Q4	Wildcard	Coding	not answered	Solve Question


1. Tower of Hanoi
A Tower of Hanoi is a game, that consists of three rods, and a number of disks of different sizes which can slide onto any rod. The game starts with the disks in a neat stack in ascending order of size on one rod, the smallest at the top. The objective of the puzzle is to move the entire stack to another rod, obeying the following simple rules:

 

1. Only one disk can be moved at a time. 

2. Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack i.e. a disk can only be moved if it is the uppermost disk on a stack. 

3. No disk may be placed on top of a smaller disk.

 

Input: Number of disks in the first rod. e.g if the number is 5, you can assume that disks are arranged with 1 on top of 2, 2 on top of 3 and so on, until 4 on top of 5, with 5 at the bottom. 

 

Output: Series of steps which leads to all disks landing on the third rod. Each step can be represented by printing the number of disks on each rod after the step is taken. 

 

There are no test-cases set, because of the fluid nature of the output. Feel free to hard code the input and display the output on STDOUT.

 

Solution: http://www.cs.cmu.edu/~cburch/survey/recurse/hanoiimpl.html

Notes:
Suggested time in interview: 40 minutes
The “Suggested Time” is the time expected to complete this question during a real-life interview, not now in homework i.e. For the first attempt of a given homework problem, the focus should be to understand what the problem is asking, what approach you are using, coding it, as well as identifying any gaps that you can discuss during a TA session. Take your time, but limit yourself to 2 one hour sessions for most problems.

2.  Diameter of a tree
Calculate the diameter of a tree (not necessarily a binary tree). Diameter is the longest path between two leaves of a tree. A path is the sum total of all distances (weights) attached to all edges between two nodes. 

 

In the examples below, a tree is represented in a specific notation. 

 

e.g. "{0,1,{5,0}}" means:

* it starts with root (0), which has one (1) child, which will follow in braces. 

* Inside the braces, it says that the distance (weight) of reaching that first child is 5 and

* that there are no more children after that (0)

 

You can represent the tree however you like. This is just one convenient way. Other example test-cases:

 

 	// One node - no diameter
 	new TestCase("{0,0}", 0),
 	// One leaf
 	new TestCase("{0,1,{5,0}}", 5),
 	// Still one leaf
 	new TestCase("{0,1,{5,1,{4,1,{7,0}}}}", 16),
 	// The diameter of the first son is the diameter of the tree
 	new TestCase("{0,1,{5,2,{8,0},{7,0}}}", 15),
 	// The diameter of the last son is the diameter of the tree
 	new TestCase("{0,3,{1,2,{5,0},{7,0}},{1,2,{6,0},{5,0}},{1,2,{10,0},{9,0}}}", 19),
 	// Now the diameter is between a leaf in the first son and a leaf in the third son
 	new TestCase("{0,3,{5,2,{8,0},{7,0}},{5,2,{9,0},{8,0}},{5,2,{10,0},{9,0}}}", 29)
 	 
 

Test-cases: Please hard-code inputs and present output to STDOUT. Ignore the failing dummy test-case.

 

Solution:

http://techieme.in/tree-diameter/ 

OR http://www.geeksforgeeks.org/diameter-of-a-binary-tree/

 

 

 

Notes:
Suggested time in interview: 40 minutes
The “Suggested Time” is the time expected to complete this question during a real-life interview, not now in homework i.e. For the first attempt of a given homework problem, the focus should be to understand what the problem is asking, what approach you are using, coding it, as well as identifying any gaps that you can discuss during a TA session. Take your time, but limit yourself to 2 one hour sessions for most problems.

3. Double power
Implement a power function to raise a double to an int power, including negative powers.

 

e.g. pow(double d, int p) should give 'd' raised to power 'p'.

 

Of course, please don't use in-built methods like pow(). Idea is to implement that using recursion.

 

 

Solution: http://stackoverflow.com/questions/101439/the-most-efficient-way-to-implement-an-integer-based-power-function-powint-int

 

 

Notes:
Suggested time in interview: 10 minutes to do a brute-force and 20 with a trick that optimizes it
The “Suggested Time” is the time expected to complete this question during a real-life interview, not now in homework i.e. For the first attempt of a given homework problem, the focus should be to understand what the problem is asking, what approach you are using, coding it, as well as identifying any gaps that you can discuss during a TA session. Take your time, but limit yourself to 2 one hour sessions for most problems.

In HackerRank, Double is simulated with "float".

4. Wildcard
Input: 10?

Output: 101, 100 

 

i.e. ? behaves like a wild-card. There are two possibilities for 10?, when that ? is replaced with either 0 or 1. 

 

Input: 1?0?

Output: 1000, 1001, 1100, 1101 

 

Please write a program that takes given strings as input and produces the suggested output.

 

 

========

Solution - Pseudo-ish code

========

// print the output

if (input.length == i) {
System.out.println(input);
return;
}
 
// wild card character
if (input[i] == WILD_CHAR) {
 
input[i] = '0';
// recursively call
wildChar(input, i + 1);
 
input[i] = '1';
// recursively call
wildChar(input, i + 1);
 
// set the number back
// WILD_CHAR - ?
input[i] = WILD_CHAR;
 
} else {
wildChar(input, i + 1);
}
========
 
 
Notes:
Suggested time in interview: 20 minutes.
The “Suggested Time” is the time expected to complete this question during a real-life interview, not now in homework i.e. For the first attempt of a given homework problem, the focus should be to understand what the problem is asking, what approach you are using, coding it, as well as identifying any gaps that you can discuss during a TA session. Take your time, but limit yourself to 2 one hour sessions for most problems.

